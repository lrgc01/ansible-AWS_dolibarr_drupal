---
- name: Generate private key for account and csr ----------
  openssl_privatekey:
    path: "{{ item }}"
  loop:
    - "{{ cert_params_hash.account_private_key_path }}"
    - "{{ cert_params_hash.csr_private_key_path }}"
  register: private_key_created
  tags: ssl_certificate

- name: Create CSR certificate ----------------------------
  openssl_csr:
    path: "{{ cert_params_hash.site_csr_cert_path }}"
    privatekey_path: "{{ cert_params_hash.csr_private_key_path }}"
    C: "{{ cert_params_hash.C }}"
    ST: "{{ cert_params_hash.ST }}"
    L: "{{ cert_params_hash.L }}"
    O: "{{ cert_params_hash.O }}"
    OU: "{{ cert_params_hash.OU }}"
    E: "{{ cert_params_hash.email_address }}"
    CN: "{{ cert_params_hash.CN }}"
  when: private_key_created is success
  register: csr_cert_created
  tags: ssl_certificate

- name: Create ACME account with respective email ---------
  acme_account:
    account_key_src: "{{ cert_params_hash.account_private_key_path }}"
    acme_version: '2'
    acme_directory: "{{ cert_params_hash.acme_directory }}"
    terms_agreed: yes
    state: present
    allow_creation: "{{ cert_params_hash.allow_creation_y_n }}"
    contact:
      - "mailto:{{ cert_params_hash.email_address }}"
  when: private_key_created is success
  register: acme_account_created
  tags: ssl_certificate

############################## BEGIN 2 steps challenge
# Two step challenge to create CRT cert
- name: Create certificate - 1st step challenge -----------
  acme_certificate:
    account_key_src: "{{ cert_params_hash.account_private_key_path }}"
    acme_version: '2'
    acme_directory: "{{ cert_params_hash.acme_directory }}"
    modify_account: "no"
    csr: "{{ cert_params_hash.site_csr_cert_path }}"
    dest: "{{ cert_params_hash.site_crt_cert_path }}"
    fullchain_dest: "{{ cert_params_hash.site_crt_fullchain_path }}"
    force: "{{ cert_params_hash.force_cert_y_n }}"
    remaining_days: "{{ cert_params_hash.remaining_days }}"
  when: private_key_created is success and csr_cert_created is success
  register: cert_challenge_first
  tags: ssl_certificate

- name: Create directory structure for challenge ----------
  file:
    state: "directory"
    path: "{{ drupal_site_rootdir }}/{{ cert_challenge_first['challenge_data'][cert_params_hash.CN]['http-01']['resource'] | dirname }}"
  when: cert_challenge_first is changed 
  register: cert_challenge_dir_created
  tags: ssl_certificate
  
- name: Copy resource to web site to complete the 2nd step  
  copy:
    dest: "{{ drupal_site_rootdir }}/{{ cert_challenge_first['challenge_data'][cert_params_hash.CN]['http-01']['resource'] }}"
    content: "{{ cert_challenge_first['challenge_data'][cert_params_hash.CN]['http-01']['resource_value'] }}"
  when: cert_challenge_first is changed and cert_challenge_dir_created is success
  register: cert_challenge_in_place
  tags: ssl_certificate

- name: Create certificate - 2nd step challenge -get certs-
  acme_certificate:
    account_key_src: "{{ cert_params_hash.account_private_key_path }}"
    acme_version: '2'
    acme_directory: "{{ cert_params_hash.acme_directory }}"
    modify_account: "no"
    csr: "{{ cert_params_hash.site_csr_cert_path }}"
    dest: "{{ cert_params_hash.site_crt_cert_path }}"
    fullchain_dest: "{{ cert_params_hash.site_crt_fullchain_path }}"
    chain_dest: "{{ cert_params_hash.site_crt_interchain_path }}"
    remaining_days: "{{ cert_params_hash.remaining_days }}"
    data: "{{ cert_challenge_first }}"
  when: cert_challenge_first is changed or cert_challenge_in_place is changed
  register: challenge_2nd_step_done
  tags: ssl_certificate
############################## END

- name: Copy new cert and key to web server's place -------
  copy:
    dest: "{{ item.dest }}"
    src: "{{ item.src }}"
    remote_src: true
  loop: "{{ cert_n_key_list }}"
  register: new_cert_n_key_in_place
  notify: Restart web server
  tags: ssl_certificate

# We just change the order from the upload above
- name: Download cert and key files if needed -------------
  fetch:
    dest: "{{ item.src }}"
    src: "{{ item.dest }}"
    flat: true
  loop: "{{ up_down_cert_files_list }}"
  tags: ssl_certificate, key_cert_copy_only
  
