# # General vars
# update_cache_y_n also appears in common/default vars
#
update_cache_y_n        : "yes"
#
# Our web server vars
#
www_basedir		: "/var/www"
www_htmldir		: "{{ www_basedir }}/html"
www_username	        : "www-data"
web_service		: "nginx"					# will be used later
#
# List of packages:
# When srv is defined, both state and enabled must also be here.
# Will be used twice, one for packages and again for services.
#
service_state           : "started"
dep_pkg_list            : 
   - { pkg : "{{ web_service }}" ,  srv : "{{ web_service }}" , state : "started" , enabled : true }
   - { pkg : "php"   		 ,  srv : "php7.0-fpm"        , state : "started" , enabled : true }
   - { pkg : "mariadb-server"    ,  srv : "mysql"	      , state : "started" , enabled : true }
   - { pkg : "php-mysql"       }
   - { pkg : "php-gd"          }
   - { pkg : "php-json"        }
   - { pkg : "php-curl"        }
   - { pkg : "php-mbstring"    }
   - { pkg : "php-xml"         }
   - { pkg : "php-mcrypt"      }
   - { pkg : "composer"        }
   - { pkg : "python-mysqldb"  }
   - { pkg : "python-openssl"  }
   - { pkg : "git" 	       }
#
# For git
#
git_repodir		: "/repos"
git_user		: "git"
auth_keys_to_remote_user: 
   - { localkeyfile 	: "conf.d/luiz_pub_key" , remoteuser : "{{ git_user }}" }
   - { localkeyfile 	: "conf.d/nono_pub_key" , remoteuser : "{{ git_user }}" }
pub_keys_file_list	:
   - "conf.d/luiz_pub_key"
project_list		:
   - "drupal.git"
   - "test.git"
#
# Removal specific: when purging everything
#
# Make sure nginx and mysql are listed above in dep_pkg_list
remove_list	:
   - "/etc/nginx/"
   - "/var/lib/mysql/"
#
# PHP configuration
#
php_ini_file	        : "/etc/php/7.0/fpm/php.ini"
php_ini_pairs           :
   - { section : "PHP" , option : "allow_url_fopen" , value : "Off" }
   - { section : "PHP" , option : "memory_limit"    , value : "64M" }
#
# This all_descriptor_list will be used for directory and/or link and/or file in file module,
# but will also be a source for template module.
#
all_descriptor_list     :
   - { types : [ "dir" , "tmpl" ] , dest : "/etc/nginx/sites-available" , name : "Drupal-site" }
   - { types : [ "dir" , "tmpl" ] , dest : "/etc/nginx/snippets"        , name : "drupalcert.conf" }
   - { types : [ "dir" , "link" ] , src  : "/etc/nginx/sites-available" , dest : "/etc/nginx/sites-enabled" , name : "Drupal-site" }
   - { types : [ "absent"       ] , dest : "/etc/nginx/sites-enabled/default" }
   - { types : [ "tmpl" ]         , dest : "~ubuntu" , name : "updatedns.sh" , mode : "0755" }
#
# SSL certificate and private key
#
# Production directory in Let's Encrypt: "https://acme-v02.api.letsencrypt.org/directory",
# Staging directory in Let's Encrypt: "https://acme-staging-v02.api.letsencrypt.org/directory",
#
key_base_path		: "/etc/ssl/private"
cert_base_path          : "/etc/ssl/certs"
site_certkey		: "{{ key_base_path }}/drupal.key"
site_cert		: "{{ cert_base_path }}/drupal.crt"
#cert_name_prefix	: "stg-letsencrypt"
cert_name_prefix	: "pro-letsencrypt"
cert_params_hash	: {
   account_private_key_path : "{{ key_base_path }}/{{ cert_name_prefix }}-account-key.key",
   csr_private_key_path     : "{{ key_base_path }}/{{ cert_name_prefix }}-csr-key.key",
   site_csr_cert_path       : "{{ cert_base_path }}/{{ cert_name_prefix }}.csr",
   site_crt_cert_path       : "{{ cert_base_path }}/{{ cert_name_prefix }}.crt",
   site_crt_fullchain_path  : "{{ cert_base_path }}/{{ cert_name_prefix }}-fullchain.crt",
   site_crt_interchain_path : "{{ cert_base_path }}/{{ cert_name_prefix }}-intermmediate.crt",
   acme_directory           : "https://acme-v02.api.letsencrypt.org/directory",
   C             	    : "GB",
   ST			    : "England",
   L   			    : "London",
   O       		    : "Ansible test",
   OU        		    : "Ansible test",
   email_address	    : "luizrogeriocarvalho@gmail.com",
   CN		            : "lrgc01.uk.to",
   force_cert_y_n           : "no",
   allow_creation_y_n       : "yes",
   remaining_days           : "30"
}
cert_n_key_list		:
   -  {
        src  : "{{ cert_params_hash.csr_private_key_path }}",
        dest : "{{ site_certkey }}"
      }
   -  {
        src  : "{{ cert_params_hash.site_crt_cert_path }}",
        dest  : "{{ site_cert }}"
      }
# Base vars to upload the key/cert when first running and
# download when cert changes, just as a backup.
# confdir is defined in common role
local_certkey_path	: "{{ confdir }}/drupal.key"
local_cert_path		: "{{ confdir }}/drupal.crt"
up_down_cert_files_list	: 
   -  {
        src  : "{{ local_certkey_path }}", 
        dest : "{{ site_certkey }}"
      }
   -  {
        src  : "{{ local_cert_path }}" ,
        dest : "{{ site_cert }}"
      }
#
# Specific for Drupal / civicrm
#
drupal_version          : "drupal-7"
drupal_basename    	: "Drupal-site"
drupal_site_rootdir	: "{{ www_basedir }}/{{ drupal_basename }}"
#
# First steps to ensure security
# From: https://www.drupal.org/node/244924
#
drupaladm_user		: "drupaladm"
siteadm_user		: "siteadm"
users_list        	:
   - { name : "{{ drupaladm_user }}" , comment : "Drupal admin user" , groups : "www-data" , sshkey: false }
   - { name : "{{ siteadm_user }}"   , comment : "Site admin user"   , groups : "www-data" , sshkey: false }
   - { name : "{{ git_user }}"       , comment : "Git user"          , groups : ""         , sshkey: true  }
#
# DATABASES
# Will be used as a list for a loop.
# Pay attention to the order, because [0] will be used below in drush_db_url.
#
# dbcreate = false => only grant perms
#
# Another priv to civicrm should be granted (shown below), but mysql_user ansible 
# module doesn't accept it until now. So we use append_privs=true in the main task, 
# because the drush civicrm-install does this grant job.
# civicrm.civicrm_strip_non_numeric:EXECUTE,ALTER ROUTINE ON FUNCTION
# or
# GRANT EXECUTE, ALTER ROUTINE ON FUNCTION `civicrm`.`civicrm_strip_non_numeric` TO 'civicrm'@'%'
db_list                 :
   -  { 
        admuser  : "root" , 
        admpass  : '' , 
        host     : "localhost",
        user     : "drupal" , 
        pass     : "Drupal123" , 
        dbname   : "drupal" ,  
        encoding : "utf8mb4" , 
        collation: "utf8mb4_general_ci" ,
        perms    : "drupal.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,CREATE TEMPORARY TABLES/civicrm.*:SELECT",
        dbcreate : true
      }
   -  { 
        admuser  : "root" , 
        admpass  : '' , 
        host     : "localhost",
        user     : "civicrm" , 
        pass     : "Drupal123" , 
        dbname   : "civicrm" , 
        encoding : "utf8mb4" , 
        collation: "utf8mb4_general_ci" ,
        perms    : "civicrm.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES,TRIGGER,CREATE ROUTINE,ALTER ROUTINE,REFERENCES",
        dbcreate : true
      }
#
# Drush configuration for download and install Drupal 7 + civicrm 5.
#
# Composer is only used for drush.
#
composer_required       : "drush/drush:7"
composer_path		: "PATH=/bin:/sbin:/usr/bin:/usr/sbin:/root/.config/composer/vendor/bin"
civicrm_include_line    : "--include=sites/all/modules/civicrm/drupal/drush"
drush_base_cmd		: "{{ composer_path }} drush -y {{ civicrm_include_line }}"
# Pay attention to the order of list above (db_list)
#
# Drupal specific
#
drush_db_url            : "--db-url=mysql://{{ db_list[0].user }}:{{ db_list[0].pass }}@{{ db_list[0].host }}/{{ db_list[0].dbname }}"
drush_account_name      : "--account-name=admin"
drush_account_pass      : "--account-pass=Drupal123"
drush_account_mail      : "--account-mail=admin@lrgc01.uk.to"
drush_site_name         : "--site-name={{ cert_params_hash.CN }}"
drush_extra_args        : "--clean-url=0 install_configure_form.site_default_country=GB"
drush_si_args           : "standard {{ drush_db_url }} {{ drush_account_name }} {{ drush_account_pass }} {{ drush_account_mail }} {{ drush_site_name }} {{ drush_extra_args }}"
#
# Some drupal dir/files vars
#
drupal_modules_dir	      : "{{ drupal_site_rootdir }}/modules"
drupal_themes_dir	      : "{{ drupal_site_rootdir }}/themes"
drupal_sites_default          : "{{ drupal_site_rootdir }}/sites/default"
drupal_all_module_dir         : "{{ drupal_site_rootdir }}/sites/all/modules"
drupal_all_themes_dir         : "{{ drupal_site_rootdir }}/sites/all/themes"
drupal_file_system_dir	      : "{{ drupal_sites_default }}/files"
drupal_settings_file          : "{{ drupal_sites_default }}/settings.php"
drupal_default_settings_file  : "{{ drupal_sites_default }}/default.settings.php"
drupal_private_files_dir      : "{{ www_basedir }}/private/drupal/files"
drupal_modules_list           : [ "ctools" , "views" , "views_ui" ]
#
# civiCRM specific
#
civicrm_download_url    : "https://download.civicrm.org/civicrm-5.4.1-drupal.tar.gz"
civicrm_dbhost          : "--dbhost=\'{{ db_list[1].host }}\'"
civicrm_dbname          : "--dbname={{ db_list[1].dbname }}"
civicrm_dbpass          : "--dbpass={{ db_list[1].pass }}"
civicrm_dbuser          : "--dbuser={{ db_list[1].user }}"
civicrm_site_url        : "--site_url={{ cert_params_hash.CN }}"
civicrm_cmd_args	: "--ssl=on {{ civicrm_dbhost }} {{ civicrm_dbname }} {{ civicrm_dbpass }} {{ civicrm_dbuser }} {{ civicrm_site_url }}"
civicrm_settings_file   : "{{ drupal_sites_default }}/civicrm.settings.php"
civicrm_extensions_dir  : "{{ www_basedir }}/private/civicrm/ext"
#
# Later specific Drupal/CiviCRM templates, if any:
drupal_file_descriptor_list   :
   - { types : [ "dir" , "tmpl" ] , dest : "{{ drupal_site_rootdir }}"  , name : "info.php" }
   - { types : [ "dir" , "tmpl" ] , dest : "{{ drupal_sites_default }}" , name : "views.inc" }
#
# Is the order importante here? Perhaps if using recursively.
drupal_dirs_config_list       :
   - { path : "{{ drupal_modules_dir }}"       , owner: "{{ drupaladm_user }}" , group : "{{ www_username }}" , mode : "u+w,g-w,o-rwx" , recurse : true  }
   - { path : "{{ drupal_themes_dir }}"	       , owner: "{{ drupaladm_user }}" , group : "{{ www_username }}" , mode : "u+w,g-w,o-rwx" , recurse : true  }
   - { path : "{{ drupal_all_module_dir }}"    , owner: "{{ siteadm_user }}"   , group : "{{ www_username }}" , mode : "u+w,g-w,o-rwx" , recurse : false }
   - { path : "{{ drupal_all_themes_dir }}"    , owner: "{{ siteadm_user }}"   , group : "{{ www_username }}" , mode : "u+w,g-w,o-rwx" , recurse : false }
   - { path : "{{ drupal_sites_default }}"     , owner: "{{ siteadm_user }}"   , group : "{{ www_username }}" , mode : "u+w,g-w,o-rwx" , recurse : false }
   - { path : "{{ drupal_file_system_dir }}"   , owner: "{{ www_username }}"   , group : "{{ www_username }}" , mode : "u+rwX"	       , recurse : true  }
   - { path : "{{ drupal_private_files_dir }}" , owner: "{{ siteadm_user }}"   , group : "{{ www_username }}" , mode : "u+w,g+w,o-rwx" , recurse : false }
   - { path : "{{ civicrm_extensions_dir }}"   , owner: "{{ siteadm_user }}"   , group : "{{ www_username }}" , mode : "u+w,g+w,o-rwx" , recurse : false }
drupal_lineinfile_config_list :
   - { 
       path   : "{{ civicrm_settings_file }}" ,
       owner  : "{{ drupaladm_user }}" , 
       group  : "{{ www_username }}" ,
       mode   : "0444" , 
       regexp : ".*\\$civicrm_setting\\['Directory Preferences'\\]\\['extensionsDir'\\] =.*" ,
       line   : "$civicrm_setting['Directory Preferences']['extensionsDir'] = \'{{ civicrm_extensions_dir }}\';" 
     }
   - { 
       path   : "{{ drupal_settings_file }}" ,
       owner  : "{{ drupaladm_user }}" , 
       group  : "{{ www_username }}" ,
       mode   : "0444" , 
       regexp : ".*/sites/default/views.inc.*" ,
       line   : "require_once '{{ drupal_sites_default }}/views.inc';"
     }
   - { 
       path   : "{{ drupal_settings_file }}" ,
       owner  : "{{ drupaladm_user }}" , 
       group  : "{{ www_username }}" ,
       mode   : "0444" , 
       regexp : ".*\\$conf\\['drupal_http_request_fails'\\] =.*" ,
       line   : "$conf['drupal_http_request_fails'] = FALSE;"
     }
   - { 
       path   : "{{ drupal_settings_file }}" ,
       owner  : "{{ drupaladm_user }}" , 
       group  : "{{ www_username }}" ,
       mode   : "0444" , 
       regexp : ".*\\$conf\\['file_private_path'\\] =.*" ,
       line   : "$conf['file_private_path'] = \'{{ drupal_private_files_dir }}\';"
     }
   - { 
       path   : "{{ drupal_settings_file }}" ,
       owner  : "{{ drupaladm_user }}" , 
       group  : "{{ www_username }}" ,
       mode   : "0444" , 
       regexp : ".*\\$conf\\['file_default_scheme'\\] =.*" ,
       line   : "$conf['file_default_scheme'] = 'private';"
     }
